---

- name: Remove OS managed pip package if found.
  package: name='python-pip' state=absent

- name: Check if pip is Installed
  command: 'pip --version'
  ignore_errors: true
  changed_when: false
  register: _pip_installed

- name: Install pip
  easy_install: name=pip state=present
  when: (_pip_installed.rc != 0)

- name: Check if pip is Up to Date
  shell: "pip list --outdated | grep '^pip'"
  ignore_errors: true
  changed_when: false
  register: _pip_outdated
  when: (_pip_installed.rc == 0) and (docker_py_pip_upgrade|bool)

- name: Upgrade pip
  pip: name=pip state=latest extra_args='{{ docker_py_pip_extra_args|default(omit) }}'
  when: ((_pip_outdated.rc | default('1')) == 0) and (docker_py_pip_upgrade|bool == true)

# This is a workaround for a known issue when installing certain packages
# on debian based distros: https://bugs.launchpad.net/ubuntu/+source/python-pip/+bug/1306991
- name: Install docker-py Prereqs
  pip: 
    name: 'requests>=2.3.0'
    state: present 
    umask: '0022' 
    extra_args: '{{ docker_py_pip_extra_args|default(omit) }}'
  when: _pip_installed.rc != 0

- name: pip Install docker-py
  pip: 
    name: "'docker-py=={{ docker_py_version }}'" 
    state: present 
    umask: '0022' 
    extra_args: '{{ docker_py_pip_extra_args|default(omit) }}'
  when: (docker_py_version is defined) and (docker_py_version is not none)

- name: pip Install or Upgrade docker-py
  pip: 
    name: docker-py 
    state: latest 
    umask: '0022' 
    extra_args: '{{ docker_py_pip_extra_args|default(omit) }}'
  when: (docker_py_version is not defined) or (docker_py_version is none)
